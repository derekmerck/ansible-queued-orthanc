---
# tasks file for queued-orthanc

#############################
# Setup dockerhost
#############################

- name: Get dockerhost
  shell: /sbin/ip route | awk '/docker0/ { print $NF }'
  register: dockerhost_response

- set_fact:
    dockerhost_ip:              "{{ dockerhost_response.stdout }}"

#############################
# Create required directories
#############################

- name: "Create {{ qorth_queue.diana_routing_dir }} directory for routing"
  file:
    path: '{{ qorth_queue.diana_routing_dir }}'
    state: directory
#  become: yes
  when: (qorth_queue.diana_routing_dir is defined) and (qorth_queue.diana_routing_dir != None)

- name: "Create {{ qorth_queue.ftpd_incoming_dir }} directory for routing"
  file:
    path: '{{ qorth_queue.ftpd_incoming_dir }}'
    state: directory
#  become: yes
  when: (diana_routing_dir is defined) and diana_routing_dir and (qorth_queue.ftpd_incoming_dir is defined) and (qorth_queue.ftpd_incoming_dir != None)

#############################
# Copy routing config if needed
#############################

- name: 'Add {{ qorth_queue.diana_routing_dir }}/{{ qorth_queue.orthanc_container_name }}.py'
  template:
    src: routing.py.j2
    dest: "{{ diana_routing_dir }}/{{ qorth_queue.orthanc_container_name }}.py }}"
  when: (qorth_queue.diana_routing_dir is defined) and (qorth_queue.diana_routing_dir != None)
  notify: restart_orthanc_container

#############################
# Create destination node
#############################

- name: Setup destination role
  include_role:
    name: orthanc-docker
  vars:
    orthanc_docker_image:       "{{ qorth_destination.orthanc_docker_image }}"
    orthanc_docker_tag:         "{{ qorth_destination.orthanc_docker_tag }}"
    orthanc_pg_backend:         "{{ qorth_destination.orthanc_pg_backend }}"
    orthanc_container_name:     "{{ qorth_destination.orthanc_container_name }}"
    orthanc_title:              "{{ qorth_destination.orthanc_title }}"
    orthanc_user:               "{{ qorth_destination.orthanc_user }}"
    orthanc_password:           "{{ qorth_destination.orthanc_password }}"
    orthanc_use_data_container: "{{ qorth_destination.orthanc_use_data_container }}"
    orthanc_data_dir:           "{{ qorth_destination.orthanc_volumes.data }}"
    orthanc_config_dir:         "{{ qorth_destination.orthanc_volumes.config }}"
    orthanc_dicom_port:         "{{ qorth_destination.orthanc_ports.dicom }}"
    orthanc_api_port:           "{{ qorth_destination.orthanc_ports.api }}"

#############################
# Create queue node
#############################

- name: Setup queue role
  include_role:
    name: orthanc-docker
  vars:
    orthanc_docker_image:       "{{ qorth_queue.orthanc_docker_image }}"
    orthanc_docker_tag:         "{{ qorth_queue.orthanc_docker_tag }}"
    orthanc_pg_backend:         "{{ qorth_queue.orthanc_pg_backend }}"
    orthanc_container_name:     "{{ qorth_queue.orthanc_container_name }}"
    orthanc_title:              "{{ qorth_queue.orthanc_title }}"
    orthanc_user:               "{{ qorth_destination.orthanc_user }}"
    orthanc_password:           "{{ qorth_destination.orthanc_password }}"
    orthanc_use_data_container: "{{ qorth_queue.orthanc_use_data_container }}"
    orthanc_data_dir:           "{{ qorth_queue.orthanc_volumes.data }}"
    orthanc_config_dir:         "{{ qorth_queue.orthanc_volumes.config }}"
    orthanc_dicom_port:         "{{ qorth_queue.orthanc_ports.dicom }}"
    orthanc_api_port:           "{{ qorth_queue.orthanc_ports.api }}"

    orthanc_peers:  >
          { 'destination': ['http://{{ dockerhost_ip }}:{{ qorth_destination.orthanc_ports.api }}',
                            'orthanc',
                            '{{ qorth_destination.orthanc_password }}'] }

    # TODO: Delete destinations if using a DIANA-Watcher
    orthanc_destinations: >
          {{ [{ 'dest': 'destination',
                'type': 'peer' }] }}

    orthanc_anonymize:          "{{ qorth_queue.orthanc_anonymize }}"
    orthanc_compress:           "{{ qorth_queue.orthanc_compress }}"
