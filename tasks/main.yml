---
# tasks file for queued-orthanc

- set_fact:
    qorth_incoming_files__: "{{ qorth_incoming_files_ | combine( qorth_incoming_files | default({}) ) }}"
    qorth_queue__:          "{{ qorth_queue_          | combine( qorth_queue          | default({}) ) }}"
    qorth_destination__:    "{{ qorth_destination_    | combine( qorth_destination    | default({}) ) }}"

#############################
# Setup dockerhost
#############################

- name: Get dockerhost
  shell: /sbin/ip route | awk '/docker0/ { print $NF }'
  register: dockerhost_response
  when: dockerhost_ip is not defined

- set_fact:
    dockerhost_ip:    "{{ dockerhost_response.stdout }}"
  when: dockerhost_ip is not defined


#############################
# Create required directories
#############################

- name: "Create services config directory"
  file:
    path: '{{ qorth_conf_dir }}/routes'
    state: directory

- name: "Create routing config directory"
  file:
    path: '{{ qorth_conf_dir }}/services'
    state: directory

- name: "Create {{ qorth_incoming_files__.ftp_dir }} directory for routing"
  file:
    path: '{{ qorth_incoming_files__.pftp_dir }}'
    state: directory


#############################
# Copy routing config if needed
#############################

- name: 'Add services config'
  template:
    src: services.yml.j2
    dest: '{{ "{}/services/{}-services.yml".format( qorth_conf_dir, qorth_base_name ) }}'

- name: 'Add routing config'
  template:
    src: routes.yml.j2
    dest: '{{ "{}/routes/{}-routing.yml".format( qorth_conf_dir, qorth_base_name ) }}'


#############################
# Create destination node
#############################

- name: Setup destination role
  include_role:
    name: orthanc-docker
  vars:
    orthanc_docker_image:       "{{ qorth_destination__.orthanc_docker_image }}"
    orthanc_docker_tag:         "{{ qorth_destination__.orthanc_docker_tag }}"
    orthanc_pg_backend:         "{{ qorth_destination__.orthanc_pg_backend }}"
    orthanc_pg_use_data_container: "{{ qorth_destination__.orthanc_pg_use_data_container }}"
    orthanc_container_name:     "{{ qorth_destination__.orthanc_container_name }}"
    orthanc_title:              "{{ qorth_destination__.orthanc_title }}"
    orthanc_user:               "{{ qorth_destination__.orthanc_user }}"
    orthanc_password:           "{{ qorth_destination__.orthanc_password }}"
    orthanc_use_data_container: "{{ qorth_destination__.orthanc_use_data_container }}"
    orthanc_data_dir:           "{{ qorth_destination__.orthanc_volumes.data }}"
    orthanc_config_dir:         "{{ qorth_destination__.orthanc_volumes.config }}"
    orthanc_dicom_port:         "{{ qorth_destination__.orthanc_ports.dicom }}"
    orthanc_api_port:           "{{ qorth_destination__.orthanc_ports.api }}"

#############################
# Create queue node
#############################

- name: Setup queue role
  include_role:
    name: orthanc-docker
  vars:
    orthanc_docker_image:       "{{ qorth_queue__.orthanc_docker_image }}"
    orthanc_docker_tag:         "{{ qorth_queue__.orthanc_docker_tag }}"
    orthanc_pg_backend:         "{{ qorth_queue__.orthanc_pg_backend }}"
    orthanc_container_name:     "{{ qorth_queue__.orthanc_container_name }}"
    orthanc_title:              "{{ qorth_queue__.orthanc_title }}"
    orthanc_user:               "{{ qorth_destination__.orthanc_user }}"
    orthanc_password:           "{{ qorth_destination__.orthanc_password }}"
    orthanc_use_data_container: "{{ qorth_queue__.orthanc_use_data_container }}"
    orthanc_data_dir:           "{{ qorth_queue__.orthanc_volumes.data }}"
    orthanc_config_dir:         "{{ qorth_queue__.orthanc_volumes.config }}"
    orthanc_dicom_port:         "{{ qorth_queue__.orthanc_ports.dicom }}"
    orthanc_api_port:           "{{ qorth_queue__.orthanc_ports.api }}"

    orthanc_peers:  >
          { 'destination': ['http://{{ dockerhost_ip }}:{{ qorth_destination__.orthanc_ports.api }}',
                            'orthanc',
                            '{{ qorth_destination__.orthanc_password }}'] }

    # TODO: Delete destinations if using a DIANA-Watcher
    orthanc_destinations: >
          {{ [{ 'dest': 'destination',
                'type': 'peer' }] }}

    orthanc_anonymize:          "{{ qorth_queue__.orthanc_anonymize }}"
    orthanc_compress:           "{{ qorth_queue__.orthanc_compress }}"
